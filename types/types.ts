export interface NetPathContract {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: true;
  organizationId?: number;
  organizationName?: string;
  name?: string;
  typeId?: number;
  typeTitle?: string;
  headCompanyId?: number;
  headCompanyName?: string;
  company1Id?: number;
  company1Name?: string;
  company2Id?: number;
  company2Name?: string;
  startDate?: string;
  endDate?: string;
  statusId?: number;
  statusTitle?: string;
  contractNo?: string;
  contractDate?: string;
  headCompanyCityId?: number;
  headCompanyCityName?: string;
  company1CityId?: number;
  company1CityName?: string;
  company2CityId?: number;
  company2CityName?: string;
}
export interface NetFreighter {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  companyId?: number;
  plkId?: number;
  startDate?: string;
  endDate?: string;
  status?: number;
}
export interface Province {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  code?: string;
  name?: string;
}
export interface Trip {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  tripNum: number;
  serial: string;
  issueDate: string;
  issueTime: number;
  srcId: number;
  dstId: number;
  freighterType: number;
  distance: number;
  passengerCount: number;
  chairCount: number;
  costTrip: number;
  insurancePassTrip: number;
  insuranceBusTrip: number;
  companyId: number;
  driverCardId1: number;
  driverCardId2: number;
  driverCardId3: number;
  freighterId: number;
  plkNo: string;
  plkSerial: number;
  referanceNo: string;
  tripStatus: number;
  sendType: number;
  systemSendType: number;
  keyDay: number;
  tripType: number;
  tripDate: string;
  tripTime: string;
  userId: number;
  waitTimeReferenceNo: number;
  tripDateMilady: string;
  isUpdate: number;
  programmerId: number;
  pathId: number;
  tripReferenceNo: string;
  barCapacity: number;
  srcTerminalId: number;
  dstTerminalId: number;
  tripKind: number;
  tripNo: number;
}
export interface Terminal {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  terminalCode: number;
  cityId: number;
  terminalName: string;
  address: string;
  tel: number;
  terminalType: number;
  terminalOwner: number;
  terminalPositionX: string;
  terminalPositionY: string;
  terminalPositionZ: string;
  terminalKind: number;
}
export interface TripDetail {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  tripDetailSeq: number;
  nationalId: number;
  name: string;
  family: string;
  mobile: number;
  tripId: number;
  chair_num: string;
  cost: number;
  srcStationId: number;
  dstStationId: number;
}
export interface User {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  username: string;
  mobile: string;
  email: string;
  description: string;
  displayName: string;
  name: string;
  image: string;
  imageId: number;
}
export interface Role {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  name: string;
  description: string;
  displayName: string;
}
export type Associate = {
  cityId?: number;
  cityName?: string;
  phone?: number;
  mobileNo?: string;
  mobile?: string;
  managerFamily?: string;
  managerName?: string;
  managerNationalCode?: string;
  name?: string;
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  email?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  code?: string;
};
export type City = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  code?: string;
  name?: string;
  parentId?: number;
  parentName?: string;
  level?: number;
  cityOldId?: number;
  cityOldName?: string;
};
export type OldCity = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  code?: string;
  name?: string;
};
export type Company = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  code?: string;
  name?: string;
  locationActivityCode?: number;
  expireDate?: string;
  activityStatus?: string;
  companyOrder?: number;
  commissionOnlineNo?: number;
  userId?: number;
  userName?: string;
  associateId?: number;
  associateName?: string;
  cityId?: number;
  cityName?: string;
  parentId?: number;
  parentName?: string;
  level?: number;
  identityId?: number;
  ownerId?: number;
  ownerName?: string;
  activityTypeId?: number;
  activityTypeTitle?: string;
  activityDomain?: string;
  locationId?: number;
  locationName?: string;
};

export type Driver = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  nationalCode?: string;
  name?: string;
  family?: string;
  fatherName?: string;
  birthCityId?: number;
  birthCityName?: string;
  cardExpireDate?: string;
  birthCertificateNo?: number;
  birthCertificateSerial?: number;
  insuranceNo?: string;
  insuranceBranch?: string;
  certificateDriverNo?: string;
  certificateDriverLocationCode?: number;
  cardStatus?: number;
  certificateIssueDate?: string;
  activityStatus?: string;
  activityDesc?: string;
  cardNo?: string;
  freighterId?: number;
  freighterTitle?: string;
};
export type Freighter = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  cardNo?: number;
  plkType?: string;
  plkNo?: string;
  plkSerial?: string;
  plkLocationCode?: number;
  makeYear?: number;
  companyId?: number;
  companyName?: string;
  status?: number;
  systemCode?: number;
  typeCode?: number;
  activityStatus?: string;
  activityDesc?: string;
  freighterTypeId?: number;
  freighterTypeTitle?: string;
  passengerCount?: number;
  barCapacity?: number;
};
export type location = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  name?: string;
  description?: string;
  province?: string;
  city?: string;
  zone?: string;
  latitude?: number;
  longitude?: number;
};
export type Organization = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  name?: string;
  description?: string;
  phone?: string;
  address?: string;
  parentId?: number;
  parentName?: string;
  locationId?: number;
  locationName?: string;
  accessorKey?: string;
  type?: string;
  picker?: string;
  [key: string]: any;
};
export type Menu = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  name?: string;
  displayName?: string;
  path?: string;
  icon?: string;
  orderNode?: number;
  parentId?: number;
  parentName?: string;
};
export type Endpoint = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  name?: string;
  description?: string;
  displayName?: string;
  endpointClass?: string;
  method?: string;
  endpointURI?: string;
};
export type UserGroupRoleEnpoint = {
  id?: number;
  created?: string;
  createdById?: number;
  createdByName?: string;
  updated?: string;
  updatedById?: number;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: number;
  organizationName?: string;
  userId?: number;
  userName?: string;
  groupId?: number;
  groupName?: string;
  roleId?: number;
  roleName?: string;
  endpointId?: number;
  endpointName?: string;
  description?: string;
  type?: string;
  hasAccess?: boolean;
};
export type UserGroupRoleMenu = {
  id?: string;
  created?: string;
  createdById?: string;
  createdByName?: string;
  updated?: string;
  updatedById?: string;
  updatedByName?: string;
  fullTitle?: string;
  active?: boolean;
  organizationId?: string;
  organizationName?: string;
  userId?: string;
  userName?: string;
  groupId?: string;
  groupName?: string;
  roleId?: string;
  roleName?: string;
  menuId?: string;
  menuName?: string;
  description?: string;
  type?: string;
  hasAccess?: boolean;
};
export type DimBase = {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  code: string;
  title: string;
  typeCode: string;
  typeTitle: string;
  parentId: number;
  parentTitle: string;
  level: number;
  isLeaf: boolean;
};
export type AnyThing =
  | Associate
  | TripDetail
  | Terminal
  | Trip
  | OldCity
  | City
  | Company
  | Driver
  | Freighter
  | Organization
  | location
  | UserGroupRoleEnpoint
  | Endpoint
  | Menu
  | NetPathContract
  | Province
  | UserGroupRoleMenu;
export type ResType<T> = {
  totalElements: number;
  totalPages: number;
  size: number;
  content: T;
  number: number;
  sort: {
    empty: boolean;
    sorted: boolean;
    unsorted: boolean;
  };
  first: boolean;
  last: boolean;
  numberOfElements: number;
  pageable: {
    pageNumber: number;
    offset: number;
    sort: {
      empty: boolean;
      sorted: boolean;
      unsorted: boolean;
    };
    pageSize: number;
    paged: boolean;
    unpaged: boolean;
  };
  empty: boolean;
};
export type UserRole = {
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  userId: number;
  userName: number;
  groupId: number;
  groupName: string;
  roleId: number;
  roleName: string;
  masterRoleId: number;
  masterRoleName: number;
  description: string;
  type: string;
  original?:{
    id: number,
}
};
export type UserGroup = {
  id: number;
  created: number[];
  createdById: number;
  createdByName: string;
  updated: number[];
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  description: string;
  userId: number;
  userName: string;
  groupId: number;
  groupName: string;
};
export type UserGroupRole = {
  id: number;
  created: number[];
  createdById: number;
  createdByName: string;
  updated: number[];
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  userId: number;
  userName: string;
  groupId: number;
  groupName: string;
  roleId: number;
  roleName: string;
  masterRoleId: number;
  masterRoleName: string;
  description: string;
  type: string;
};
export type Station = {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  name: string;
  type: number;
  posPositionX: string;
  posPositionY: string;
  posPositionZ: string;
  pathId: number;
  distanceOfSrc: number;
};
export type PathType = {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  name: string;
  srcCityId: boolean;
  dstCityId: boolean;
  srcPositionX: string;
  srcPositionY: string;
  srcPositionZ: string;
  dstPositionX: string;
  dstPositionY: string;
  dstPositionZ: string;
  distance: boolean;
  companyId: boolean;
  parentLevel: boolean;
  axisCode: boolean;
  isDefault: boolean;
  distanceOfSrc: number;
};
export type NetPathType = {
  id: number;
  created: string;
  createdById: number;
  createdByName: string;
  updated: string;
  updatedById: number;
  updatedByName: string;
  fullTitle: string;
  active: boolean;
  organizationId: number;
  organizationName: string;
  pathId: number;
  freighterType: number;
  freighterNum: number;
  contractId: number;
  articleId: number;
};
